{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/errorBoundary/ErrorBoundary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","wrap","_context","prev","next","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","_x2","_x3","_x4","apply","arguments","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","_args","length","undefined","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","char","name","description","limitDescr","checkDescr","thumbnail","path","extension","homepage","urls","wiki","comics","items","getComic","_ref3","_callee3","_context3","_transformComics","getAllComics","_ref4","_callee4","_args4","_context4","title","price","prices","pageCount","language","textObjects","descr","slice","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","key","value","errorInfo","console","log","this","setState","props","children","Component","AppBanner","_jsxs","className","avengers","avengersLogo","ComicsList","comicsList","setComicsList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","_toConsumableArray","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","imgStyle","tabIndex","ref","el","onClick","onComicsSelected","onKeyPress","e","Link","to","renderItems","errorMessage","spinner","Spinner","disabled","ComicsPage","setComics","_Fragment"],"mappings":"iGAAe,UAA0B,kC,OCkB1BA,IAhBM,WACjB,OACIC,cAAA,OACIC,MAAO,CACHC,QAAS,QACTC,MAAO,QACPC,OAAQ,QACRC,UAAW,UACXC,OAAQ,UAEZC,IAAKC,EACLC,IAAI,Y,yECoEDC,IA/EU,WACrB,IAAAC,ECDmB,WACnB,IAAAC,EAA8BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,EAA0BL,mBAAS,MAAKM,EAAAJ,YAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GA4BtB,MAAO,CAACH,UAASM,QA1BDC,sBAAW,eAAAC,EAAAC,YAAAC,IAAAC,MAAC,SAAAC,EAAOC,EAAKC,EAAQC,EAAMC,GAAO,IAAAC,EAAAC,EAAA,OAAAR,IAAAS,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAExC,OAAjBrB,GAAW,GAAMmB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGUC,MAAMV,EAAK,CAACC,SAAQC,OAAMC,YAAU,KAAD,EAA5C,IAARC,EAAQG,EAAAI,MAEAC,GAAG,CAADL,EAAAE,KAAA,cACN,IAAII,MAAM,mBAADC,OAAoBd,EAAG,cAAAc,OAAaV,EAASW,SAAU,KAAD,SAAAR,EAAAE,KAAA,EAGtDL,EAASY,OAAO,KAAD,EAEhB,OAFZX,EAAIE,EAAAI,KAEVvB,GAAW,GAAOmB,EAAAU,OAAA,SACXZ,GAAI,QAIS,MAJTE,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAGXnB,GAAW,GACXI,EAASe,EAAAW,GAAEC,SAASZ,EAAAW,GAAA,yBAAAX,EAAAa,UAAArB,EAAA,mBAI3B,gBAAAsB,EAAAC,EAAAC,EAAAC,GAAA,OAAA7B,EAAA8B,MAAA,KAAAC,YAtB0B,GAsBxB,IAIuBnC,QAAOoC,WAFdjC,uBAAY,kBAAMF,EAAS,QAAO,KD3BPoC,GAAvCzC,EAAOL,EAAPK,QAASM,EAAOX,EAAPW,QAASF,EAAKT,EAALS,MAAOoC,EAAU7C,EAAV6C,WAE1BE,EAAW,4CACXC,EAAU,0CAIVC,EAAgB,eAAApC,EAAAC,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAiC,EAAAC,EAAAC,EAAAR,UAAA,OAAA7B,IAAAS,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAoC,OAA7BuB,EAAME,EAAAC,OAAA,QAAAC,IAAAF,EAAA,GAAAA,EAAA,GAHT,IAGgC3B,EAAAE,KAAA,EACvChB,EAAQ,GAADqB,OAAIe,EAAQ,8BAAAf,OAA6BkB,EAAM,KAAAlB,OAAIgB,GAAW,MAAO,KAAM,CAAC,eAAgB,qBAAqB,KAAD,EAAhI,OAAHG,EAAG1B,EAAAI,KAAAJ,EAAAU,OAAA,SACFgB,EAAI5B,KAAKgC,QAAQC,IAAIC,IAAoB,wBAAAhC,EAAAa,UAAArB,OACnD,kBAHqB,OAAAJ,EAAA8B,MAAA,KAAAC,YAAA,GAKhBc,EAAY,eAAAC,EAAA7C,YAAAC,IAAAC,MAAG,SAAA4C,EAAOC,GAAE,IAAAV,EAAA,OAAApC,IAAAS,MAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cAAAmC,EAAAnC,KAAA,EACRhB,EAAQ,GAADqB,OAAIe,EAAQ,eAAAf,OAAc6B,EAAE,KAAA7B,OAAIgB,GAAW,MAAO,KAAM,CAAC,eAAgB,qBAAqB,KAAD,EAA7G,OAAHG,EAAGW,EAAAjC,KAAAiC,EAAA3B,OAAA,SACFsB,EAAoBN,EAAI5B,KAAKgC,QAAQ,KAAG,wBAAAO,EAAAxB,UAAAsB,OAClD,gBAHiBrB,GAAA,OAAAoB,EAAAhB,MAAA,KAAAC,YAAA,GAKZa,EAAsB,SAACM,GAEzB,MAAO,CACHF,GAAIE,EAAKF,GACTG,KAAMD,EAAKC,KACXC,YAAaC,EAAWC,EAAWJ,EAAKE,cACxCG,UAAWL,EAAKK,UAAUC,KAAO,IAAMN,EAAKK,UAAUE,UACtDC,SAAUR,EAAKS,KAAK,GAAGtD,IACvBuD,KAAMV,EAAKS,KAAK,GAAGtD,IACnBwD,OAAQX,EAAKW,OAAOC,QAItBC,EAAQ,eAAAC,EAAA/D,YAAAC,IAAAC,MAAG,SAAA8D,EAAOjB,GAAE,IAAAV,EAAA,OAAApC,IAAAS,MAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,cAAAoD,EAAApD,KAAA,EACJhB,EAAQ,GAADqB,OAAIe,EAAQ,WAAAf,OAAU6B,EAAE,KAAA7B,OAAIgB,GAAW,MAAO,KAAM,CAAC,eAAgB,qBAAqB,KAAD,EAAzG,OAAHG,EAAG4B,EAAAlD,KAAAkD,EAAA5C,OAAA,SACF6C,EAAiB7B,EAAI5B,KAAKgC,QAAQ,KAAG,wBAAAwB,EAAAzC,UAAAwC,OAC/C,gBAHatC,GAAA,OAAAqC,EAAAlC,MAAA,KAAAC,YAAA,GAKRqC,EAAY,eAAAC,EAAApE,YAAAC,IAAAC,MAAG,SAAAmE,IAAA,IAAAjC,EAAAC,EAAAiC,EAAAxC,UAAA,OAAA7B,IAAAS,MAAA,SAAA6D,GAAA,cAAAA,EAAA3D,KAAA2D,EAAA1D,MAAA,OAAoC,OAA7BuB,EAAMkC,EAAA/B,OAAA,QAAAC,IAAA8B,EAAA,GAAAA,EAAA,GA9BL,GA8B4BC,EAAA1D,KAAA,EACnChB,EAAQ,GAADqB,OAAIe,EAAQ,0BAAAf,OAAyBkB,EAAM,KAAAlB,OAAIgB,GAAW,MAAO,KAAM,CAAC,eAAgB,qBAAqB,KAAD,EAA5H,OAAHG,EAAGkC,EAAAxD,KAAAwD,EAAAlD,OAAA,SACFgB,EAAI5B,KAAKgC,QAAQC,IAAIwB,IAAiB,wBAAAK,EAAA/C,UAAA6C,OAEhD,kBAJiB,OAAAD,EAAAvC,MAAA,KAAAC,YAAA,GAMZoC,EAAmB,SAACN,GAGtB,MAAO,CACHb,GAAIa,EAAOb,GACXG,KAAMU,EAAOY,MACbrB,YAAaS,EAAOT,aAAe,0BACnCG,UAAWM,EAAON,UAAUC,KAAO,IAAMK,EAAON,UAAUE,UAC1DC,SAAUG,EAAOF,KAAK,GAAGtD,IACzBqE,MAAOb,EAAOc,OAAO,GAAGD,MAAQb,EAAOc,OAAO,GAAGD,MAAQ,IAAM,WAC/DE,UAAWf,EAAOe,UAAYf,EAAOe,UAAY,SAAW,2CAC5DC,SAAUhB,EAAOiB,YAAYD,UAAY,UAI3CvB,EAAa,SAACyB,GAChB,MAAc,KAAVA,EACOA,EAEA,2BAIT1B,EAAa,SAAC0B,GAGhB,OAAIA,EAAMvC,OAFQ,IAGMuC,EAAMC,MAAM,EAHlB,KAGkC,MAGzCD,GAIf,MAAO,CAACvF,UAASI,QAAOoC,aAAYI,mBAAkBS,eAAcuB,eAAcL,c,0FE3EhFkB,EAAa,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,IAAAK,EAAAC,YAAA,KAAAN,GAAA,QAAAO,EAAAzD,UAAAS,OAAAiD,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA5D,UAAA4D,GAGd,OAHcL,EAAAF,EAAAQ,KAAA9D,MAAAsD,EAAA,OAAAjE,OAAAsE,KACfI,MAAQ,CACJjG,OAAO,GACV0F,EAmBA,OAnBAQ,YAAAb,EAAA,EAAAc,IAAA,oBAAAC,MAMD,SAAkBpG,EAAOqG,GACrBC,QAAQC,IAAIvG,EAAOqG,GACnBG,KAAKC,SAAS,CACVzG,OAAO,MAEd,CAAAmG,IAAA,SAAAC,MAED,WACI,OAAII,KAAKP,MAAMjG,MACJpB,cAACD,IAAY,IAGjB6H,KAAKE,MAAMC,aACrBtB,EAtBc,CAASuB,aAyBbvB,O,2GC5BA,G,MAAA,IAA0B,sCCA1B,MAA0B,0C,OCiB1BwB,EAbG,WACd,OACIC,eAAA,OAAKC,UAAU,cAAaJ,SAAA,CACxB/H,cAAA,OAAKO,IAAK6H,EAAU3H,IAAI,aACxByH,eAAA,OAAKC,UAAU,mBAAkBJ,SAAA,CAAC,yBACR/H,cAAA,SAAK,iBAG/BA,cAAA,OAAKO,IAAK8H,EAAc5H,IAAI,sB,uCCiHzB6H,G,MAnHI,SAACR,GAEhB,IAAAlH,EAAoCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAzC2H,EAAUzH,EAAA,GAAE0H,EAAa1H,EAAA,GAChCI,EAA4CL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAApDuH,EAActH,EAAA,GAAEuH,EAAiBvH,EAAA,GACxCwH,EAA4B9H,mBAAS,KAAI+H,EAAA7H,YAAA4H,EAAA,GAAlC9E,EAAM+E,EAAA,GAAEC,EAASD,EAAA,GACxBE,EAAsCjI,oBAAS,GAAMkI,EAAAhI,YAAA+H,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAElCG,EAAuCxI,cAAhCM,EAAOkI,EAAPlI,QAASI,EAAK8H,EAAL9H,MAAOwE,EAAYsD,EAAZtD,aAEvBuD,qBAAU,WACNC,EAAUvF,GAAQ,KACnB,IAEH,IAAMuF,EAAY,SAACvF,EAAQwF,GACbX,GAAVW,GACAzD,EAAa/B,GACRyF,KAAKC,IAGRA,EAAqB,SAACC,GACxB,IAAIC,GAAQ,EACTD,EAAcxF,OAAS,IACtByF,GAAQ,GAGZjB,GAAc,SAAAD,GAAU,SAAA5F,OAAA+G,YAAQnB,GAAUmB,YAAKF,OAC/Cd,GAAkB,SAAAD,GAAc,OAAI,KACpCI,GAAU,SAAAhF,GAAM,OAAIA,EAAS,KAC7BoF,GAAe,SAAAD,GAAW,OAAIS,MAG5BE,EAAWC,iBAAO,IAElBC,EAAc,SAACrF,GAQjBmF,EAASG,QAAQC,SAAQ,SAAAC,GAAI,OAAIA,EAAKC,UAAUC,OAAO,4BACvDP,EAASG,QAAQtF,GAAIyF,UAAUE,IAAI,yBACnCR,EAASG,QAAQtF,GAAI4F,SA6CzB,IAAM9E,EA1CN,SAAqB+E,GACjB,IAAM/E,EAAS+E,EAAIlG,KAAI,SAAC6F,EAAMM,GAC1B,IAAIC,EAAW,CAAC,UAAc,SAK9B,MAJuB,wEAAnBP,EAAKjF,YACLwF,EAAW,CAAC,UAAc,UAK1BvK,cAAA,MACImI,UAAU,eACVqC,SAAU,EAEVC,IAAK,SAAAC,GAAE,OAAIf,EAASG,QAAQQ,GAAKI,GACjCC,QAAS,WACL7C,EAAM8C,iBAAiBZ,EAAKxF,IAC5BqF,EAAYS,IAEhBO,WAAY,SAACC,GACK,MAAVA,EAAEvD,KAAyB,UAAVuD,EAAEvD,MACnBO,EAAM8C,iBAAiBZ,EAAKxF,IAC5BqF,EAAYS,KAElBvC,SAEFG,eAAC6C,IAAI,CAACC,GAAE,WAAArI,OAAaqH,EAAKxF,IAAKuD,SAAA,CAC3B/H,cAAA,OAAKmI,UAAU,mBAAmB5H,IAAKyJ,EAAKjF,UAAWtE,IAAKuJ,EAAKrF,KAAM1E,MAAOsK,IAC9EvK,cAAA,OAAKmI,UAAU,oBAAmBJ,SAAEiC,EAAKrF,OACzC3E,cAAA,OAAKmI,UAAU,qBAAoBJ,SAAEiC,EAAK9D,YAhBzCoE,MAuBjB,OACItK,cAAA,MAAImI,UAAU,eAAcJ,SACvBzC,IAKC2F,CAAY1C,GAEpB2C,EAAe9J,EAAQpB,cAACD,IAAY,IAAK,KACzCoL,EAAUnK,IAAYyH,EAAiBzI,cAACoL,IAAO,IAAK,KAG1D,OACIlD,eAAA,OAAKC,UAAU,eAAcJ,SAAA,CACxBmD,EACAC,EACA7F,EACDtF,cAAA,UACImI,UAAU,mCACVkD,SAAU5C,EACVxI,MAAO,CAAC,QAAW+I,EAAc,OAAS,SAC1C2B,QAAS,kBAAMvB,EAAUvF,IAAQkE,SAEjC/H,cAAA,OAAKmI,UAAU,QAAOJ,SAAC,qBC3FxBuD,UAlBI,WAEf,IAAA1K,EAAoCC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA3B2K,GAAFzK,EAAA,GAAWA,EAAA,IAMhC,OACIoH,eAAAsD,WAAA,CAAAzD,SAAA,CACI/H,cAACiI,EAAS,IACVjI,cAACyG,IAAa,CAAAsB,SACV/H,cAACsI,EAAU,CAACsC,iBARC,SAACpG,GACtB+G,EAAU/G","file":"static/js/4.646602ac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.5bfd7105.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img \r\n            style={{\r\n                display: 'block',\r\n                width: \"250px\",\r\n                height: \"250px\",\r\n                objectFit: \"contain\",\r\n                margin: \"0 auto\"\r\n            }} \r\n            src={img}\r\n            alt='Error' \r\n        />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/',\r\n          _apiKey = 'apikey=1d5cd1c31c3cb686a9f38fbb57e3023b',\r\n          _baseOffsetForHeroes = 210,\r\n          _baseOffsetForComics = 50;\r\n\r\n    const getAllCharacters = async (offset = _baseOffsetForHeroes) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`, 'GET', null, {'Content-Type': 'application/json'});\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`, 'GET', null, {'Content-Type': 'application/json'});\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: limitDescr(checkDescr(char.description)),\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`, 'GET', null, {'Content-Type': 'application/json'});\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseOffsetForComics) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`, 'GET', null, {'Content-Type': 'application/json'});\r\n        return res.data.results.map(_transformComics)\r\n        \r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n\r\n\r\n        return {\r\n            id: comics.id,\r\n            name: comics.title,\r\n            description: comics.description || 'There is no description',\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            homepage: comics.urls[0].url,\r\n            price: comics.prices[0].price ? comics.prices[0].price + '$' : 'No price',\r\n            pageCount: comics.pageCount ? comics.pageCount + ' pages' : 'No information about the number of pages',\r\n            language: comics.textObjects.language || 'en-us'\r\n        }\r\n    }\r\n\r\n    const checkDescr = (descr) => {\r\n        if (descr !== '') {\r\n            return descr\r\n        } else {\r\n            return 'There is no description'\r\n        }\r\n    }\r\n\r\n    const limitDescr = (descr) => {\r\n        const maxLength = 210;\r\n\r\n        if (descr.length > maxLength) {\r\n            const description = descr.slice(0, maxLength) + '...';\r\n            return description;\r\n        } else {\r\n            return descr;\r\n        }\r\n    }\r\n\r\n    return {loading, error, clearError, getAllCharacters, getCharacter, getAllComics, getComic}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method, body, headers) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`); //конструируем новую ошибку\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    // static getDerivedStateFromError(error) {\r\n    //     return {error: true}\r\n    // }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport './comicsList.scss';\n\nconst ComicsList = (props) => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(500);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true)\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if(newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(comicsEnded => ended)\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        itemRefs.current.forEach(item => item.classList.remove('comics__item_selected'));\n        itemRefs.current[id].classList.add('comics__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n\n                <li \n                    className=\"comics__item\"\n                    tabIndex={0}\n                    key={i}\n                    ref={el => itemRefs.current[i] = el}\n                    onClick={() => {\n                        props.onComicsSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onComicsSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}\n                >\n                    <Link to={`/comics/${item.id}`}>\n                        <img className=\"comics__item-img\" src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"comics__item-name\">{item.name}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': comicsEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}\n            >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nComicsList.propTypes = {\n    onComicsSelected: PropTypes.func.isRequired\n}\n\nexport default ComicsList;","import { useState } from \"react\";\r\n\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n\r\n    const [selectedComics, setComics] = useState(null);\r\n\r\n    const onComicsSelected = (id) => {\r\n        setComics(id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ErrorBoundary>\r\n                <ComicsList onComicsSelected={onComicsSelected}/>\r\n            </ErrorBoundary>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"sourceRoot":""}