{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/errorBoundary/ErrorBoundary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","wrap","_context","prev","next","fetch","sent","ok","Error","concat","status","json","abrupt","t0","stop","_x","_x2","_x3","_x4","apply","arguments","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","_args","length","undefined","results","map","_transformCharacter","getCharacterByName","_ref2","_callee2","name","_context2","getCharacter","_ref3","_callee3","id","_context3","char","description","limitDescr","checkDescr","thumbnail","path","extension","homepage","urls","wiki","comics","items","getComic","_ref4","_callee4","_context4","_transformComics","getAllComics","_ref5","_callee5","_args5","_context5","title","price","prices","pageCount","language","textObjects","descr","slice","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","error","_createClass","key","value","errorInfo","console","log","this","setState","props","children","Component","AppBanner","_jsxs","className","avengers","avengersLogo","setContent","newItemLoading","Spinner","ComicsList","comicsList","setComicsList","_useState3","_useState4","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","_toConsumableArray","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","imgStyle","CSSTransition","timeout","classNames","tabIndex","ref","el","onClick","onComicsSelected","onKeyPress","e","Link","to","TransitionGroup","component","renderItems","disabled","ComicsPage","setComics","_Fragment","Helmet","content"],"mappings":"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","file":"static/js/7.896000c8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.5bfd7105.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img \r\n            style={{\r\n                display: 'block',\r\n                width: \"250px\",\r\n                height: \"250px\",\r\n                objectFit: \"contain\",\r\n                margin: \"0 auto\"\r\n            }} \r\n            src={img}\r\n            alt='Error' \r\n        />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {request, clearError, process, setProcess} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/',\r\n          _apiKey = 'apikey=1d5cd1c31c3cb686a9f38fbb57e3023b',\r\n          _baseOffsetForHeroes = 210,\r\n          _baseOffsetForComics = 50;\r\n\r\n    const getAllCharacters = async (offset = _baseOffsetForHeroes) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`, 'GET', null, {'Content-Type': 'application/json'});\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`, 'GET', null, {'Content-Type': 'application/json'});\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: limitDescr(checkDescr(char.description)),\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`, 'GET', null, {'Content-Type': 'application/json'});\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseOffsetForComics) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`, 'GET', null, {'Content-Type': 'application/json'});\r\n        return res.data.results.map(_transformComics)\r\n        \r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n\r\n\r\n        return {\r\n            id: comics.id,\r\n            name: comics.title,\r\n            description: comics.description || 'There is no description',\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            homepage: comics.urls[0].url,\r\n            price: comics.prices[0].price ? comics.prices[0].price + '$' : 'No price',\r\n            pageCount: comics.pageCount ? comics.pageCount + ' pages' : 'No information about the number of pages',\r\n            language: comics.textObjects.language || 'en-us'\r\n        }\r\n    }\r\n\r\n    const checkDescr = (descr) => {\r\n        if (descr !== '') {\r\n            return descr\r\n        } else {\r\n            return 'There is no description'\r\n        }\r\n    }\r\n\r\n    const limitDescr = (descr) => {\r\n        const maxLength = 210;\r\n\r\n        if (descr.length > maxLength) {\r\n            const description = descr.slice(0, maxLength) + '...';\r\n            return description;\r\n        } else {\r\n            return descr;\r\n        }\r\n    }\r\n\r\n    return {\r\n            clearError, \r\n            process, \r\n            setProcess,\r\n            getAllCharacters, \r\n            getCharacterByName, \r\n            getCharacter, \r\n            getAllComics, \r\n            getComic\r\n        }\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method, body, headers) => {\r\n\r\n        setProcess('loading');\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`); //конструируем новую ошибку\r\n            }\r\n\r\n            const data = await response.json();\r\n            \r\n            return data;\r\n\r\n        } catch(e) {\r\n\r\n            setProcess('error')\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n\r\n        setProcess('loading');\r\n    }, []);\r\n\r\n    return {request, clearError, process, setProcess}\r\n}","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    // static getDerivedStateFromError(error) {\r\n    //     return {error: true}\r\n    // }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting': \n            return <Spinner/>;\n            break;\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>;\n            break;\n        case 'confirmed':\n            return <Component/>;\n            break;\n        case 'error': \n            return <ErrorMessage/>\n            break;\n        default: \n            throw new Error('Unexpected process state');\n    }\n}\n\nconst ComicsList = (props) => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(500);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {getAllComics, process, setProcess} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true)\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(() => setProcess('confirmed'))\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if(newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(comicsEnded => ended)\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        itemRefs.current.forEach(item => item.classList.remove('comics__item_selected'));\n        itemRefs.current[id].classList.add('comics__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <CSSTransition key={item.id} timeout={500} classNames=\"comics__item\">\n                    <li \n                        className=\"comics__item\"\n                        tabIndex={0}\n                        key={i}\n                        ref={el => itemRefs.current[i] = el}\n                        onClick={() => {\n                            props.onComicsSelected(item.id);\n                            focusOnItem(i);\n                        }}\n                        onKeyPress={(e) => {\n                            if (e.key === ' ' || e.key === \"Enter\") {\n                                props.onComicsSelected(item.id);\n                                focusOnItem(i);\n                            }\n                        }}\n                    >\n                        <Link to={`/comics/${item.id}`}>\n                            <img className=\"comics__item-img\" src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                            <div className=\"comics__item-name\">{item.name}</div>\n                            <div className=\"comics__item-price\">{item.price}</div>\n                        </Link>\n                    </li>\n                </CSSTransition>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"comics__grid\">\n                <TransitionGroup component={null}>\n                    {items}\n                </TransitionGroup>\n            </ul>\n        )\n    }\n\n    // const items = renderItems(comicsList);\n\n    // const errorMessage = error ? <ErrorMessage/> : null;\n    // const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n\n    return (\n        <div className=\"comics__list\">\n            {setContent(process, () => renderItems(comicsList), newItemLoading)}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': comicsEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}\n            >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nComicsList.propTypes = {\n    onComicsSelected: PropTypes.func.isRequired\n}\n\nexport default ComicsList;","import { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n\r\n    const [selectedComics, setComics] = useState(null);\r\n\r\n    const onComicsSelected = (id) => {\r\n        setComics(id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with list of our comics\"\r\n                />\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n\r\n            <AppBanner/>\r\n            <ErrorBoundary>\r\n                <ComicsList onComicsSelected={onComicsSelected}/>\r\n            </ErrorBoundary>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"sourceRoot":""}