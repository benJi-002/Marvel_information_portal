{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/errorBoundary/ErrorBoundary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","wrap","_context","prev","next","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","_x2","_x3","_x4","apply","arguments","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","_args","length","undefined","results","map","_transformCharacter","getCharacterByName","_ref2","_callee2","name","_context2","getCharacter","_ref3","_callee3","id","_context3","char","description","limitDescr","checkDescr","thumbnail","path","extension","homepage","urls","wiki","comics","items","getComic","_ref4","_callee4","_context4","_transformComics","getAllComics","_ref5","_callee5","_args5","_context5","title","price","prices","pageCount","language","textObjects","descr","slice","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","key","value","errorInfo","console","log","this","setState","props","children","Component","AppBanner","_jsxs","className","avengers","avengersLogo","ComicsList","comicsList","setComicsList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","_toConsumableArray","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","imgStyle","CSSTransition","timeout","classNames","tabIndex","ref","el","onClick","onComicsSelected","onKeyPress","e","Link","to","TransitionGroup","component","renderItems","errorMessage","spinner","Spinner","disabled","ComicsPage","setComics","_Fragment"],"mappings":"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","file":"static/js/6.4fe8c733.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.5bfd7105.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img \r\n            style={{\r\n                display: 'block',\r\n                width: \"250px\",\r\n                height: \"250px\",\r\n                objectFit: \"contain\",\r\n                margin: \"0 auto\"\r\n            }} \r\n            src={img}\r\n            alt='Error' \r\n        />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/',\r\n          _apiKey = 'apikey=1d5cd1c31c3cb686a9f38fbb57e3023b',\r\n          _baseOffsetForHeroes = 210,\r\n          _baseOffsetForComics = 50;\r\n\r\n    const getAllCharacters = async (offset = _baseOffsetForHeroes) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`, 'GET', null, {'Content-Type': 'application/json'});\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`, 'GET', null, {'Content-Type': 'application/json'});\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: limitDescr(checkDescr(char.description)),\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`, 'GET', null, {'Content-Type': 'application/json'});\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseOffsetForComics) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`, 'GET', null, {'Content-Type': 'application/json'});\r\n        return res.data.results.map(_transformComics)\r\n        \r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n\r\n\r\n        return {\r\n            id: comics.id,\r\n            name: comics.title,\r\n            description: comics.description || 'There is no description',\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            homepage: comics.urls[0].url,\r\n            price: comics.prices[0].price ? comics.prices[0].price + '$' : 'No price',\r\n            pageCount: comics.pageCount ? comics.pageCount + ' pages' : 'No information about the number of pages',\r\n            language: comics.textObjects.language || 'en-us'\r\n        }\r\n    }\r\n\r\n    const checkDescr = (descr) => {\r\n        if (descr !== '') {\r\n            return descr\r\n        } else {\r\n            return 'There is no description'\r\n        }\r\n    }\r\n\r\n    const limitDescr = (descr) => {\r\n        const maxLength = 210;\r\n\r\n        if (descr.length > maxLength) {\r\n            const description = descr.slice(0, maxLength) + '...';\r\n            return description;\r\n        } else {\r\n            return descr;\r\n        }\r\n    }\r\n\r\n    return {loading, error, clearError, getAllCharacters, getCharacterByName, getCharacter, getAllComics, getComic}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method, body, headers) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`); //конструируем новую ошибку\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    // static getDerivedStateFromError(error) {\r\n    //     return {error: true}\r\n    // }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './comicsList.scss';\n\nconst ComicsList = (props) => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(500);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true)\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if(newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(comicsEnded => ended)\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        itemRefs.current.forEach(item => item.classList.remove('comics__item_selected'));\n        itemRefs.current[id].classList.add('comics__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <CSSTransition key={item.id} timeout={500} classNames=\"comics__item\">\n                    <li \n                        className=\"comics__item\"\n                        tabIndex={0}\n                        key={i}\n                        ref={el => itemRefs.current[i] = el}\n                        onClick={() => {\n                            props.onComicsSelected(item.id);\n                            focusOnItem(i);\n                        }}\n                        onKeyPress={(e) => {\n                            if (e.key === ' ' || e.key === \"Enter\") {\n                                props.onComicsSelected(item.id);\n                                focusOnItem(i);\n                            }\n                        }}\n                    >\n                        <Link to={`/comics/${item.id}`}>\n                            <img className=\"comics__item-img\" src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                            <div className=\"comics__item-name\">{item.name}</div>\n                            <div className=\"comics__item-price\">{item.price}</div>\n                        </Link>\n                    </li>\n                </CSSTransition>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"comics__grid\">\n                <TransitionGroup component={null}>\n                    {items}\n                </TransitionGroup>\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': comicsEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}\n            >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nComicsList.propTypes = {\n    onComicsSelected: PropTypes.func.isRequired\n}\n\nexport default ComicsList;","import { useState } from \"react\";\r\n\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n\r\n    const [selectedComics, setComics] = useState(null);\r\n\r\n    const onComicsSelected = (id) => {\r\n        setComics(id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ErrorBoundary>\r\n                <ComicsList onComicsSelected={onComicsSelected}/>\r\n            </ErrorBoundary>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"sourceRoot":""}